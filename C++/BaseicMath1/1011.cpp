#include <iostream>
#include <cmath>
using namespace std;
int main()
{
    int tc = 0; //테스트 케이스
    scanf("%d", &tc);
    for (int i = 0; i < tc; i++)
    {
        unsigned int spoint = 0;          // 시작 지점
        unsigned int epoint = 0;          // 종료 지점
        unsigned int dis = 0;             //사이 거리
        scanf("%d %d", &spoint, &epoint); //입력 받기
        dis = epoint - spoint;            // 거리 측정
        /*

      ========================================== -> 제곱근 형태 
      ------------------------------------------ -> 제곱근이 아닌데 최소 거리 바뀔 때 
      
거리 || 제곱근 || 최소거리  ||  형태
       1        1         1          1
      ==========================================
       2        1         2          1 1
      ------------------------------------------
       3        1         3          1 1 1
      ------------------------------------------
       4        2         3          1 2 1
      ==========================================
       5        2         4          1 1 2 1
      ------------------------------------------
       6        2         4          1 2 2 1 
      ------------------------------------------
       7        2         5          1 1 2 2 1
       8        2         5          1 2 2 2 1
       9        3         5          1 2 3 2 1
      ==========================================
       10       3         6          1 1 2 3 2 1
       11       3         6          1 2 2 3 2 1
       12       3         6          1 2 3 3 2 1
      ------------------------------------------ 
       13       3         7          1 1 2 3 3 2 1
       14       3         7          1 2 2 3 3 2 1
       15       3         7          1 2 3 3 3 2 1
       16       3         7          1 2 3 4 3 2 1
      ==========================================
        */
        //제곱 근과 최대거리가 연관 있어 보임
        //거리가 제곱 형태의 1  4 9 16 을 볼때  제곱근 *2 -1로 귀결 됨)
        unsigned int sqt = sqrt(dis);
        unsigned int result = 0;
        if (sqt * sqt == dis) //만약 거리가 제곱 형식 일 경우 2n-1(n은 제곱근)
        {
            result = 2 * sqt - 1;
        }
        // 해당 되는 형태는 2,6,12 , 1 4 9 16 , 즉 제곱근 사이에 제곱근 갯수만큼 일정한 패턴이 나옴
        //  4 ~ 9를 보면 5 부터 6까지 4가  2번 일어남  이때 제곱근은 2
        //  9 ~ 16을 보면 10 ~12 까지 6이  3번 일어남  이때 제곱근은 3
        // 제곱형태에서 해당 제곱근의 합 까지 해당 패턴이 반복됨
        // 그 형태는 거리(dis) 가  n*n+n>=dis 일 때임 (=) 가 들어간 경우는 dis 가 2일 때를 넣어 주기 위함
        else if (sqt * sqt + sqt >= dis) //
        {
            result = 2 * sqt;
        }
        // 해당 숫자는 3,7~9,13~15
        //  2n+1 의 형태를 갖고 있음
        else
        {
            result = 2 * (sqt) + 1; // 2(sqt+1)
        }
        printf("%d\n", result);
    }
}